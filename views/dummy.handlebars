<html>
  <head>
    <meta charset="utf-8">
    <title>push notification</title>
    
  </head>
  <body>
       <h1>push notification</h1> 

   <button id="send"onclick="notify()">Notify</button>
   
   <script src="/client.js"></script>    
  
  
  
  
   <script>
     function notify(){
       //check for service worker
if('serviceWorker' in navigator ){
  send().catch(err => console.error(err));
}

//register service worker, register push, send push
async function send(){
  //register service worker
 console.log('Registering service worker...');
 const register = await navigator.serviceWorker.register('/worker.js',{
   scope: '/'
 });
 console.log('Service worker registered...');

 //register push
 console.log('Registering Push...');
 const subscription = await register.pushManager.subscribe({
   userVisibleOnly:true,
   applicationServerKey:urlBase64ToUint8Array(publicVapidKey)
 });
 console.log('Push registered...');

 //send push notification
 console.log('Sending Push...');
 await fetch('/subscribe',{
   method: 'POST',
   body: JSON.stringify(subscription),
   headers:{
     'content-type': 'application/json'
   }
 });
 console.log('Push sent...');
}

function urlBase64ToUint8Array(base64String) {
  const padding = '='.repeat((4 - base64String.length % 4) % 4);
  const base64 = (base64String + padding)
    .replace(/-/g, '+')
    .replace(/_/g, '/');

  const rawData = window.atob(base64);
  const outputArray = new Uint8Array(rawData.length);

  for (let i = 0; i < rawData.length; ++i) {
    outputArray[i] = rawData.charCodeAt(i);
  }
  return outputArray;
}

     }
   </script>  

  </body>
</html>





{{!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.dev.js"></script> --}}
 {{!-- <h1>Lets learn WebSockets</h1>
    <script src="/chat.js"></script>
    <div id="output"></div>
		
		<input id="handle" type="text" placeholder="Handle"/>
		<input id="message" type="text" placeholder="Message"/>
		<button id="send"onclick="send()">Send</button>

    <script>
      function send(){
            var message = document.getElementById("message").value;
            var handle = document.getElementById("handle").value;
            var output = document.getElementById('output');
            console.log(message);
            console.log(handle);
             socket.emit('chat',{
                  message:message,
                  handle: handle
             });

             socket.on('chat',function(data){
             output.innerHTML += '<p><strong>' + data.handle + ':</strong>' + data.message + '</p>';
});
        }
    </script>
    --}}